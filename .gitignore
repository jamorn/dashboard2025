# Compiled output
/bin
/obj
/packages
/TestResults

# Visual Studio files
*.user
*.suo
*.vs/
*.csproj.user

# Other files
*.log
*.cache

# Entity Framework Migrations
/Migrations/*Designer.cs

# NuGet cache files
/project.assets.json
/project.nuget.cache
*.nuget.g.props
*.nuget.g.targets
*.nuget.dgspec.json

# Debug files
/Debug/

# local settings
appsettings.Development.json
launchSettings.json

# User-specific files
*.rsuser
*.userosscache
*.sln.docstates

# Visual Studio Code
.vscode/
*.code-workspace

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# คุณสามารถควบคุมการ upload ไฟล์ .MD ได้โดยการกำหนดใน .gitignore ดังนี้:
# การทำงาน 
# 1.*.md - ไม่เอาไฟล์ .md ทั้งหมด
# 2. !README.md - ยกเว้น README.md ให้ upload ได้
# 3. !/docs/*.md - ยกเว้นไฟล์ .md ในโฟลเดอร์ docs
# 4. !/docs/api/*.md - ยกเว้นไฟล์ .md ในโฟลเดอร์ docs/api
# 5. /docs/private/*.md - ไม่เอาไฟล์ .md ในโฟลเดอร์ docs/private

# หมายเหตุ
# - ! คือการยกเว้นจากกฎก่อนหน้า
# - ต้องเรียงลำดับจากกฎทั่วไปไปกฎเฉพาะ
# - ควรทดสอบด้วย git status ก่อน commit

# ไฟล์ .MD จะถูก upload ขึ้น GitHub ด้วย แต่มีข้อควรระวัง
# 1.ต้องตรวจสอบ .gitignore ว่าไม่ได้กำหนดให้ ignore ไฟล์ .md
# 2.โฟลเดอร์ .vscode ปกติจะถูก ignore โดยอัตโนมัติ

# การย้ายไฟล์ .md ไปไว้ใน /docs
# ทำให้ไฟล์ถูก tracked โดย git และ upload ขึ้น GitHub
# จัดระเบียบเอกสารให้ดีขึ้น และเข้าถึงได้ง่ายขึ้น
# เป็นมาตรฐานที่นิยมใช้ใน GitHub projects 
#